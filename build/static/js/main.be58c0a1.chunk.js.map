{"version":3,"sources":["utils.js","api.js","favoritesData.js","redux/rootSlice.js","components/SwapPageButton.js","components/Header.js","components/CurrentWeatherCard.js","components/WeatherCard.js","components/Frame.js","components/Home.js","components/FavoriteItem.js","components/Favorites.js","App.js","reportWebVitals.js","redux/reducer.js","index.js"],"names":["optionCheck","options","searchTerm","option","LocalizedName","formatIconNumber","num","toString","errorHandling","alert","apiKey","getCurrentConditions","locationKey","fetch","then","data","json","catch","error","console","log","getFiveDayForecast","favorites","Version","Key","Type","Rank","EnglishName","PrimaryPostalCode","Region","ID","Country","AdministrativeArea","Level","LocalizedType","EnglishType","CountryID","TimeZone","Code","Name","GmtOffset","IsDaylightSaving","NextOffsetChange","GeoPosition","Latitude","Longitude","Elevation","Metric","Value","Unit","UnitType","Imperial","IsAlias","SupplementalAdminAreas","DataSets","rootSlice","createSlice","name","initialState","display","location","currentWeather","fiveDay","optionList","favoriteLocations","locationSet","reducers","setLocation","state","action","payload","setCurrent","setFiveDay","setOptionList","addFavorite","push","swapView","actions","SwapPageButton","useSelector","root","dispatch","useDispatch","Fragment","Box","ml","Button","onClick","variant","color","Header","useState","setSearchTerm","handleChange","e","target","value","dropDownSelect","textContent","handleFormField","a","term","res","submitSearch","currentConditions","useEffect","length","AppBar","position","Toolbar","mr","Typography","Autocomplete","id","map","onChange","style","width","renderInput","params","TextField","label","CurrentWeatherCard","forecast","theme","createMuiTheme","responsiveFontSizes","image","WeatherIcon","Paper","elevation","m","p","ThemeProvider","flexDirection","alignItems","justifyContent","Avatar","alt","src","WeatherText","Temperature","WeatherCard","date","dayImage","Day","Icon","nightImage","Night","Date","Intl","DateTimeFormat","weekday","format","Minimum","Maximum","IconPhrase","Frame","DailyForecasts","Grid","spacing","container","direction","justify","className","item","xs","EpochDate","App","initalLoad","navigator","geolocation","Promise","rej","getCurrentPosition","lat","long","geo","coords","latitude","longitude","pt","included","forEach","favorite","handleAddFavorite","lg","FavoriteItem","listNumber","selectFavorite","event","preventDefault","Link","href","Favorites","mt","mb","index","CssBaseline","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be58c0a1.chunk.js","sourcesContent":["export const getLocation = () => {\r\n  if (navigator.geolocation) {\r\n    return new Promise((res, rej) => {\r\n      navigator.geolocation.getCurrentPosition(res, rej);\r\n    });\r\n  } else {\r\n    return {\r\n      lat: 32.0869,\r\n      long: 34.80149,\r\n    };\r\n  }\r\n};\r\n\r\nexport const optionCheck = (options, searchTerm) => {\r\n  for (let option of options) {\r\n    if (option.LocalizedName === searchTerm) {\r\n      return option;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const dateConverter = (date) => {\r\n  var options = { weekday: 'long'};\r\n  date = new Date(date)\r\n  return new Intl.DateTimeFormat('en-US', options).format(date);\r\n};\r\n\r\nexport const formatIconNumber = (num) => {\r\n  if (num < 10) {\r\n    num = '0' + num.toString();\r\n  }\r\n  return num;\r\n};\r\n\r\nexport const errorHandling = () => {\r\n  alert(\"There was a problem with your request. Please Try again later.\")\r\n}","import { errorHandling } from \"./utils\";\r\nconst apiKey = \"LYgqGvIdlOn6ARLt3MO7S9V8EF7oWX68\";\r\n\r\nexport const getCurrentConditions = (locationKey) => {\r\n  return fetch(\r\n    `https://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${apiKey}`\r\n  )\r\n    .then((data) => data.json())\r\n    .catch((error) => {\r\n      errorHandling();\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const getFiveDayForecast = (locationKey) => {\r\n  return fetch(\r\n    `https://dataservice.accuweather.com/forecasts/v1//daily/5day/${locationKey}?apikey=${apiKey}`\r\n  )\r\n    .then((data) => data.json())\r\n    .catch((error) => {\r\n      errorHandling();\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const getLocationByGeo = (lat, long) => {\r\n  return fetch(\r\n    `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${lat},${long}`\r\n  )\r\n    .then((data) => data.json())\r\n    .catch((error) => {\r\n      errorHandling();\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const getLocationByTerm = (term) => {\r\n  return fetch(\r\n    `https://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${term}`\r\n  )\r\n    .then((data) => data.json())\r\n    .catch((error) => {\r\n      errorHandling();\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const autoComplete = (term) => {\r\n  return fetch(\r\n    `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${term}`\r\n  )\r\n    .then((data) => data.json())\r\n    .catch((error) => {\r\n      errorHandling();\r\n      console.log(error);\r\n    });\r\n};\r\n","const favorites = [\r\n  {\r\n    Version: 1,\r\n    Key: \"212570\",\r\n    Type: \"City\",\r\n    Rank: 75,\r\n    LocalizedName: \"Raananna\",\r\n    EnglishName: \"Raananna\",\r\n    PrimaryPostalCode: \"\",\r\n    Region: {\r\n      ID: \"MEA\",\r\n      LocalizedName: \"Middle East\",\r\n      EnglishName: \"Middle East\",\r\n    },\r\n    Country: {\r\n      ID: \"IL\",\r\n      LocalizedName: \"Israel\",\r\n      EnglishName: \"Israel\",\r\n    },\r\n    AdministrativeArea: {\r\n      ID: \"M\",\r\n      LocalizedName: \"Central District\",\r\n      EnglishName: \"Central District\",\r\n      Level: 1,\r\n      LocalizedType: \"District\",\r\n      EnglishType: \"District\",\r\n      CountryID: \"IL\",\r\n    },\r\n    TimeZone: {\r\n      Code: \"IST\",\r\n      Name: \"Asia/Jerusalem\",\r\n      GmtOffset: 2,\r\n      IsDaylightSaving: false,\r\n      NextOffsetChange: \"2021-03-26T00:00:00Z\",\r\n    },\r\n    GeoPosition: {\r\n      Latitude: 32.183,\r\n      Longitude: 34.87,\r\n      Elevation: {\r\n        Metric: {\r\n          Value: 40,\r\n          Unit: \"m\",\r\n          UnitType: 5,\r\n        },\r\n        Imperial: {\r\n          Value: 131,\r\n          Unit: \"ft\",\r\n          UnitType: 0,\r\n        },\r\n      },\r\n    },\r\n    IsAlias: false,\r\n    SupplementalAdminAreas: [],\r\n    DataSets: [\r\n      \"AirQualityCurrentConditions\",\r\n      \"AirQualityForecasts\",\r\n      \"Alerts\",\r\n      \"ForecastConfidence\",\r\n    ],\r\n  },\r\n];\r\n\r\nexport default favorites;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\nimport favorites from '../favoritesData'\r\nexport const rootSlice = createSlice({\r\n  name: 'rootReducer',\r\n  initialState: {\r\n    display:'home',\r\n    location:{},\r\n    currentWeather:{},\r\n    fiveDay:[],\r\n    optionList:[],\r\n    favoriteLocations:favorites,\r\n    locationSet:false \r\n\r\n},\r\n  reducers: {\r\n    setLocation:(state, action) =>{\r\n      state.location = action.payload;\r\n      state.locationSet = true;\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.currentWeather = action.payload;\r\n    },\r\n    setFiveDay: (state, action) => {\r\n      state.fiveDay = action.payload;\r\n    },\r\n    setOptionList: (state, action) => {\r\n      state.optionList = action.payload;\r\n    },\r\n    addFavorite: (state, action) => {\r\n      state.favoriteLocations.push(action.payload);\r\n    },\r\n    swapView: (state, action) => {\r\n      state.display = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addFavorite, setLocation, setOptionList, setCurrent, setFiveDay,swapView } = rootSlice.actions;\r\n\r\nexport default rootSlice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport { swapView } from \"../redux/rootSlice\";\r\nconst SwapPageButton = () => {\r\n  const state = useSelector((state) => state.root);\r\n  const dispatch = useDispatch();\r\n  const swapPage = () => {\r\n    if (state.display === \"home\") {\r\n      dispatch(swapView(\"favorites\"));\r\n    } else {\r\n      dispatch(swapView(\"home\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Box ml={3}>\r\n        <Button onClick={() => swapPage()} variant=\"contained\" color=\"default\">\r\n          {state.display === \"home\" ? \"Favorites\" : \"Home\"}\r\n        </Button>\r\n      </Box>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SwapPageButton;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  autoComplete,\r\n  getFiveDayForecast,\r\n  getCurrentConditions,\r\n  getLocationByTerm,\r\n} from \"../api.js\";\r\nimport { setOptionList, setLocation, setFiveDay, setCurrent, swapView } from \"../redux/rootSlice\";\r\nimport { optionCheck } from \"../utils\";\r\nimport SwapPageButton from \"./SwapPageButton.js\";\r\nexport default function Header() {\r\n  const state = useSelector((state) => state.root);\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    if (e) {\r\n      setSearchTerm(e.target.value);\r\n    }\r\n  };\r\n  const dropDownSelect = (e) => {\r\n    if (e) {\r\n      setSearchTerm(e.target.textContent);\r\n    }\r\n  };\r\n  const handleFormField = async (location) => {\r\n    const res = await autoComplete(location);\r\n    await dispatch(dispatch(setOptionList(res)));\r\n  };\r\n\r\n  const submitSearch = async () => {\r\n    let location = await optionCheck(state.optionList, searchTerm);\r\n    if (!location) {\r\n       location = await getLocationByTerm(searchTerm);\r\n    }\r\n    const fiveDay = await getFiveDayForecast(location.Key);\r\n    const currentConditions = await getCurrentConditions(location.Key);\r\n    await dispatch(dispatch(setLocation(location)));\r\n    await dispatch(dispatch(setFiveDay(fiveDay)));\r\n    await dispatch(dispatch(setCurrent(currentConditions)));\r\n    await dispatch(swapView(\"home\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm.length >= 2) {\r\n      handleFormField(searchTerm);\r\n    }\r\n  }, [searchTerm]);\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar>\r\n        <Box mr={1}>\r\n          {\" \"}\r\n          <Typography variant={\"h5\"}> Weather App</Typography>\r\n        </Box>\r\n        <Box mr={1}>\r\n        <Autocomplete\r\n          id=\"combo-box-demo\"\r\n          options={state.optionList.map((option) => option.LocalizedName)}\r\n          onChange={dropDownSelect}\r\n          style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              value={searchTerm}\r\n              onChange={handleChange}\r\n              label=\"Enter Location\"\r\n              variant=\"outlined\"\r\n            />\r\n          )}\r\n        />\r\n        </Box>\r\n        <Button\r\n          onClick={() => submitSearch()}\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n        >\r\n          Submit\r\n        </Button>\r\n        <SwapPageButton />\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <AppBar position=\"relative\">{displayDesktop()}</AppBar>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Paper,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { dateConverter, formatIconNumber } from \"../utils\";\r\nconst CurrentWeatherCard = ({ forecast }) => {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n  const image = `https://developer.accuweather.com/sites/default/files/${formatIconNumber(\r\n    forecast.WeatherIcon\r\n  )}-s.png`;\r\n\r\n  return (\r\n    <Paper elevation={3} >\r\n      <Box m={1} p={5}>\r\n        <ThemeProvider theme={theme}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            p={0.5}\r\n          >\r\n            <Typography variant='h4'>\r\n              Current Conditions\r\n            </Typography>\r\n            <Avatar alt=\"weather icon\" src={image} />\r\n            <Typography>Conditions: {forecast.WeatherText} </Typography>\r\n\r\n            <Box p={0.5}>\r\n              <Typography>{forecast.Temperature.Imperial.Value}° F</Typography>\r\n            </Box>\r\n            <Box p={0.5}>\r\n              <Typography>{forecast.Temperature.Metric.Value}° C</Typography>\r\n            </Box>\r\n          </Box>\r\n        </ThemeProvider>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CurrentWeatherCard;\r\n","import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Paper,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { dateConverter, formatIconNumber } from \"../utils\";\r\nconst WeatherCard = ({ forecast }) => {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n  const dayImage = `https://developer.accuweather.com/sites/default/files/${formatIconNumber(\r\n    forecast.Day.Icon\r\n  )}-s.png`;\r\n  const nightImage = `https://developer.accuweather.com/sites/default/files/${formatIconNumber(\r\n    forecast.Night.Icon\r\n  )}-s.png`;\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <Box p={5}>\r\n        <ThemeProvider theme={theme}>\r\n          <Box p={0.5}>\r\n            <Typography variant=\"h4\">{dateConverter(forecast.Date)}</Typography>\r\n          </Box>\r\n          <Box p={0.5}>\r\n            <Typography>\r\n              Min Temp: {forecast.Temperature.Minimum.Value}\r\n            </Typography>\r\n          </Box>\r\n          <Box p={0.5}>\r\n            <Typography>\r\n              Max Temp: {forecast.Temperature.Maximum.Value}\r\n            </Typography>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            p={0.5}\r\n          >\r\n            <Typography variant=\"h5\">Day</Typography>\r\n            <Avatar alt=\"weather icon\" src={dayImage} />\r\n            <Typography>Conditions: {forecast.Day.IconPhrase} </Typography>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            p={0.5}\r\n          >\r\n            <Typography variant=\"h5\">Night</Typography>\r\n            <img alt=\"weather icon\" src={nightImage} />\r\n            <Typography>Conditions: {forecast.Night.IconPhrase} </Typography>\r\n          </Box>\r\n        </ThemeProvider>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Frame = () => {\r\n  const state = useSelector((state) => state.root);\r\n  return (\r\n    <React.Fragment>\r\n        \r\n      {state.fiveDay.DailyForecasts && (\r\n        <Grid\r\n        spacing={3}\r\n          container\r\n          display=\"grid\"\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className=\"container\"\r\n        >\r\n          {state.fiveDay.DailyForecasts.map((forecast) => (\r\n            <Grid item xs={2}>\r\n              <WeatherCard forecast={forecast} key={forecast.EpochDate} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Frame;\r\n","import React, { useEffect } from \"react\";\r\nimport CurrentWeatherCard from \"./CurrentWeatherCard\";\r\nimport Frame from \"./Frame\";\r\nimport { getLocation } from \"../utils\";\r\nimport {\r\n  getCurrentConditions,\r\n  getFiveDayForecast,\r\n  getLocationByGeo,\r\n} from \"../api.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addFavorite,\r\n  setCurrent,\r\n  setFiveDay,\r\n  setLocation,\r\n} from \"../redux/rootSlice\";\r\nimport { Box, Button, Grid, Typography } from \"@material-ui/core/\";\r\nfunction App() {\r\n  const state = useSelector((state) => state.root);\r\n  const dispatch = useDispatch();\r\n\r\n  const initalLoad = async () => {\r\n    const geo = await getLocation();\r\n    const location = await getLocationByGeo(\r\n      geo.coords.latitude,\r\n      geo.coords.longitude\r\n    );\r\n    const fiveDay = await getFiveDayForecast(location.Key);\r\n    const currentConditions = await getCurrentConditions(location.Key);\r\n    await dispatch(dispatch(setLocation(location)));\r\n    await dispatch(dispatch(setFiveDay(fiveDay)));\r\n    await dispatch(dispatch(setCurrent(currentConditions)));\r\n  };\r\n  const handleAddFavorite = () => {\r\n    let included = false;\r\n    state.favoriteLocations.forEach((favorite) => {\r\n      if (state.location.Key === favorite.Key) {\r\n        included = true;\r\n        alert(\"Location already saved to Favorites\");\r\n      }\r\n    });\r\n    if (!included) {\r\n      dispatch(addFavorite(state.location));\r\n      alert(\"Location saved to Favorites\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!state.locationSet) {\r\n      initalLoad();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Grid\r\n        container\r\n        spacing={5}\r\n        display=\"grid\"\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          {state.location.LocalizedName && (\r\n            <Box pt={1}>\r\n              <Typography variant=\"h4\">\r\n                {\" \"}\r\n                {\"Weather for \" +\r\n                  state.location.LocalizedName +\r\n                  \", \" +\r\n                  state.location.Country.LocalizedName}\r\n              </Typography>\r\n              <Button\r\n                onClick={() => handleAddFavorite()}\r\n                variant=\"contained\"\r\n                color=\"default\"\r\n              >\r\n                Add Location to Favorites\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n        {state.currentWeather[0] && (\r\n          <Grid item lg={3}>\r\n            <CurrentWeatherCard forecast={state.currentWeather[0]} />\r\n          </Grid>\r\n        )}\r\n        <Grid item lg={12}>\r\n          <Frame />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Link,\r\n  Paper,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swapView } from \"../redux/rootSlice\";\r\nimport { setLocation, setFiveDay, setCurrent } from \"../redux/rootSlice\";\r\nimport { getFiveDayForecast, getCurrentConditions } from \"../api.js\";\r\nconst FavoriteItem = ({ favorite, listNumber }) => {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n  const dispatch = useDispatch();\r\n  const selectFavorite = async (event) => {\r\n    const fiveDay = await getFiveDayForecast(favorite.Key);\r\n    const currentConditions = await getCurrentConditions(favorite.Key);\r\n    await dispatch(dispatch(setLocation(favorite)));\r\n    await dispatch(dispatch(setFiveDay(fiveDay)));\r\n    await dispatch(dispatch(setCurrent(currentConditions)));\r\n    await dispatch(swapView(\"home\"));\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Box m={3}>\r\n      <ThemeProvider theme={theme}>\r\n        <Paper elevation={3}>\r\n          <Box p={3} display=\"flex\" direction=\"row\">\r\n            <Typography variant=\"h5\">{listNumber}.</Typography>\r\n            <Link href=\"#\" onClick={selectFavorite}>\r\n              <Typography variant=\"h5\">\r\n                {favorite.LocalizedName}, {favorite.Country.LocalizedName}\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n        </Paper>\r\n      </ThemeProvider>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FavoriteItem;\r\n","import React from \"react\";\r\nimport {\r\n    Box,\r\n  Grid,\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FavoriteItem from \"./FavoriteItem\";\r\nconst Favorites = ({ favorites }) => {\r\n  let theme = createMuiTheme();\r\n  theme = responsiveFontSizes(theme);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ThemeProvider theme={theme}>\r\n        <Box mt={2} mb={5}>\r\n          <Typography variant=\"h3\">Favorites</Typography>\r\n        </Box>\r\n        <Grid\r\n          spacing={3}\r\n          container\r\n          display=\"grid\"\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className=\"container\"\r\n        >\r\n          {favorites.map((favorite, index) => (\r\n            <FavoriteItem\r\n              key={favorite.Key}\r\n              listNumber={index + 1}\r\n              favorite={favorite}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Favorites from './components/Favorites'\nimport { useSelector } from \"react-redux\";\nimport { CssBaseline } from \"@material-ui/core/\";\nfunction App() {\n  const state = useSelector((state) => state.root);\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Header lg={12} />\n      {state.display === \"home\" ? <Home /> : <Favorites favorites={state.favoriteLocations} />}\n    </div>\n  );\n}\n\nexport default App;\n\n//'215854' tel aviv key\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport rootSlice from \"./rootSlice\";\r\n\r\nexport default combineReducers({\r\n  root: rootSlice,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from './redux/reducer'\n\nconst store = configureStore({\n  reducer: reducer\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>  \n      <App />\n</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}